const multipleLanguageCountry = require('../common/maps/autogenerated/multiple-lang-country')
const countries = require('node-country-list')
const stores = require('../common/maps/stores')

const devLocalization = {
  locale: process.env.LOCALE || 'nl-NL'
}

function trimHost (host) {
  return host.replace(/http(s?):\/\//, '')
}

function detectVATbyLocale (locale) {
  return stores[locale].VAT
}

function detectLocale ({ host, defaultLocale }) {
  for (let locale in stores) {
    if (stores[locale].domains.includes(trimHost(host))) {
      return locale
    }
  }

  return defaultLocale || devLocalization.locale
}

function getLocaleDataByHost (host) {
  let locale = detectLocale({ host })
  let locales = Object.keys(stores)
  let countryId = locale.split('-')[1]
  const currentLanguage = locale.split('-')[0]
  const country = countries.get(countryId, currentLanguage)
  const countryList = getCountryList(currentLanguage)
  let vat = detectVATbyLocale(locale)
  let hasMultipleLanguages = !!multipleLanguageCountry[countryId]
  let countryLanguageList = multipleLanguageCountry[countryId] || null

  const localeData = { locale, locales, country, vat, hasMultipleLanguages, countryLanguageList, countryList }

  return localeData
}

function getCountryList (currentLanguage) {
  const countryCodeList = ['GB', 'AT', 'BE', 'BG', 'HR', 'CY', 'CZ', 'DK', 'EE', 'FI', 'FR', 'DE', 'GR', 'HU', 'IS', 'IE', 'IT', 'LV', 'LI', 'LT', 'LU', 'MT', 'NL', 'NO', 'PL', 'PT', 'RO', 'SK', 'SI', 'ES', 'SE', 'CH']
  const countryList = []
  const countryISOList = {}
  countryCodeList.forEach(countryCode => {
    countryList.push(countries.get(countryCode, currentLanguage))
    countryISOList[countries.get(countryCode, currentLanguage)] = countryCode
  })
  countryList.sort()
  return { countryList, countryISOList }
}

export {
  getLocaleDataByHost
}
